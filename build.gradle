buildscript {
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
        maven {
            url("https://plugins.gradle.org/m2/")
        }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.3.RELEASE")
        classpath "gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.17"
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

allprojects {

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'application'


    group 'com.jean.demo'
    version '1.0'

    sourceCompatibility = 1.8
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }

}

subprojects {

    /**
     * GIT信息
     */
    apply plugin: "com.gorylenko.gradle-git-properties"
    apply plugin: 'org.springframework.boot'
    apply plugin: 'docker'

    ext {
        brave_mysql = "4.3.4"
        mysql = "5.1.41"
        swagger = "2.7.0"
    }

    dependencyManagement {
        imports {
            mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Dalston.SR1'
        }
    }

    gitProperties {
        dateFormat = "yyyy-MM-dd HH:mm:ss"
        dateFormatTimeZone = "GMT+8:00"
    }

    task buildDocker(type: Docker, dependsOn: build) {
        push = false
        baseImage "java"
        maintainer 'Jinshubao jinshubao123@126.com'
        addFile("${applicationName}-${version}.jar", "app.jar")
        entryPoint(["java", "-jar", "app.jar"] as List)
        doFirst {
            copy {
                from jar
                into stageDir
            }
        }
    }

    /**
     * 扩展application.yml属性，从gradle读取，
     */
    processResources {
        expand(project.properties)
    }

}
