buildscript {
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.8.RELEASE")
        classpath "gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.17"
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

allprojects {

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'application'


    group 'com.jean.demo'
    version '1.0'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    repositories {
        
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    }

}

subprojects {

    /**
     * GIT信息
     */
    apply plugin: "com.gorylenko.gradle-git-properties"
    apply plugin: 'org.springframework.boot'
    apply plugin: 'docker'

    ext {
        brave_mysql = "4.3.4"
        mysql = "5.1.41"
        swagger = "2.7.0"
    }

    dependencyManagement {
        imports {
            mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Dalston.SR4'
        }
    }

    gitProperties {
        dateFormat = "yyyy-MM-dd HH:mm:ss"
        dateFormatTimeZone = "GMT+8:00"
    }

    task buildDocker(type: Docker, dependsOn: build) {
        push = false
        baseImage = "java:8"
        maintainer = 'jinshubao jinshubao123@126.com'
        exposePort(8080)
        addFile("${applicationName}-${version}.jar", "app.jar")
        volume("/tmp")
        entryPoint(["java","-Djava.security.egd=file:/dev/./urandom", "-jar", "app.jar"])
        doFirst {
            copy {
                from jar
                into stageDir
            }
        }
    }

    /**
     * 扩展application.yml属性，从gradle读取，
     */
    processResources {
        expand(project.properties)
    }

}
